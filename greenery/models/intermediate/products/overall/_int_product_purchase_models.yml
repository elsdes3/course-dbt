version: 2

models:
  - name: int_product_purchases_filtered
    description: "{{ doc('int_product_purchases_filtered_description') }}"
    data_tests:
      - dbt_expectations.expect_table_columns_to_match_ordered_list:
          column_list:
            - event_id
            - user_id
            - session_id
            - created_at
            - event_type
            - product_id
            - is_purchased
    columns:
      - name: event_id
        description: "{{ doc('events_event_id') }}"
        data_tests:
          - not_null
          - unique
      - name: user_id
        description: "{{ doc('events_user_id') }}"
        data_tests:
          - not_null
      - name: session_id
        description: "{{ doc('events_session_id') }}"
        data_tests:
          - not_null
      - name: created_at
        description: "{{ doc('events_created_at') }}"
        data_tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP_NTZ
        tags: [dbt_expectations]
      - name: event_type
        description: "{{ doc('events_event_type') }}"
        data_tests:
          - not_null
          - accepted_values:
              values:
                - page_view
                - add_to_cart
                - checkout
                - package_shipped
      - name: product_id
        description: "{{ doc('events_event_id') }}"
        data_tests:
          - dbt_expectations.expect_column_distinct_count_to_equal_other_table:
              compare_model: ref('stg_postgres_products')
              compare_column_name: product_id
          - dbt_utils.expression_is_true:
              expression: "IS NULL"
              where: "event_type IN ('checkout', 'package_shipped')"
        tags: [dbt_expectations, dbt_utils]
      - name: is_purchased
        description: "{{ doc('int_product_purchases_filtered_is_purchased') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [1]

  - name: int_product_non_purchases_filtered
    description: "{{ doc('int_product_non_purchases_filtered_description') }}"
    data_tests:
      - dbt_expectations.expect_table_columns_to_match_ordered_list:
          column_list:
            - event_id
            - user_id
            - session_id
            - created_at
            - event_type
            - product_id
            - is_purchased
    columns:
      - name: event_id
        description: "{{ doc('events_event_id') }}"
        data_tests:
          - not_null
          - unique
      - name: user_id
        description: "{{ doc('events_user_id') }}"
        data_tests:
          - not_null
      - name: session_id
        description: "{{ doc('events_session_id') }}"
        data_tests:
          - not_null
      - name: created_at
        description: "{{ doc('events_created_at') }}"
        data_tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP_NTZ
        tags: [dbt_expectations]
      - name: event_type
        description: "{{ doc('events_event_type') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: ['page_view', 'add_to_cart']
      - name: product_id
        description: "{{ doc('events_product_id') }}"
        data_tests:
          - not_null
          - dbt_expectations.expect_column_distinct_count_to_equal_other_table:
              compare_model: ref('stg_postgres_products')
              compare_column_name: product_id
        tags: [dbt_expectations]
      - name: is_purchased
        description: "{{ doc('int_product_non_purchases_filtered_is_purchased') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [0]

  - name: int_events_sessions_aggregated_to_product
    description: "{{ doc('int_sessions_aggregated_to_product_description') }}"
    data_tests:
      - dbt_expectations.expect_table_columns_to_match_ordered_list:
          column_list:
            - product_id
            - num_non_purchase_page_view_sessions
            - num_purchase_page_view_sessions
            - num_purchases
            - num_page_views
    columns:
      - name: product_id
        description: "{{ doc('products_product_id') }}"
        data_tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_distinct_count_to_equal_other_table:
              compare_model: ref('stg_postgres_products')
              compare_column_name: product_id
        tags: [dbt_expectations]
      - name: num_non_purchase_page_view_sessions
        description: "{{ doc('int_sessions_aggregated_to_product_num_non_purchase_page_view_sessions') }}"
        data_tests:
          - not_null
          - positive_values
      - name: num_purchase_page_view_sessions
        description: "{{ doc('int_sessions_aggregated_to_product_num_purchase_page_view_sessions') }}"
        data_tests:
          - not_null
          - positive_values
      - name: num_purchases
        description: "{{ doc('int_sessions_aggregated_to_product_num_purchases') }}"
        data_tests:
          - not_null
          - positive_values
      - name: num_page_views
        description: "{{ doc('int_sessions_aggregated_to_product_num_page_views') }}"
        data_tests:
          - not_null
          - positive_values

  - name: int_products_page_viewing_time_averaged
    description: "{{ doc('int_products_page_viewing_time_averaged_description') }}"
    data_tests:
      - dbt_expectations.expect_table_columns_to_match_ordered_list:
          column_list:
            - product_id
            - avg_time_on_page_seconds
            - std_time_on_page_seconds
    columns:
      - name: product_id
        description: "{{ doc('products_product_id') }}"
        data_tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_distinct_count_to_equal_other_table:
              compare_model: ref('stg_postgres_products')
              compare_column_name: product_id
        tags: [dbt_expectations]
      - name: avg_time_on_page_seconds
        description: "{{ doc('int_products_page_viewing_time_averaged_avg_time_on_page_seconds') }}"
        data_tests:
          - not_null
          - positive_values
      - name: std_time_on_page_seconds
        description: "{{ doc('int_products_page_viewing_time_averaged_std_time_on_page_seconds') }}"
        data_tests:
          - not_null
          - positive_values

  - name: int_products_purchase_abandoned_cart_sessions_summed
    description: "{{ doc('int_products_purchase_abandoned_cart_sessions_summed_description') }}"
    data_tests:
      - dbt_expectations.expect_table_columns_to_match_ordered_list:
          column_list:
            - product_id
            - num_carts
    columns:
      - name: product_id
        description: "{{ doc('products_product_id') }}"
        data_tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_distinct_count_to_equal_other_table:
              compare_model: ref('stg_postgres_products')
              compare_column_name: product_id
        tags: [dbt_expectations]
      - name: num_carts
        description: "{{ doc('int_products_purchase_abandoned_cart_sessions_summed_num_carts') }}"
        data_tests:
          - not_null
          - positive_values
